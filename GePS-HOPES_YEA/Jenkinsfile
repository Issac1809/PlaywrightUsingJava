pipeline {
    agent any

    tools {
        maven 'Maven'
    }

    environment {
        JOB_NAME = 'GePS-HOPES_YEA'
        BRANCH = 'GePS-HOPES'
        CREDENTIALS_ID = '813c6e55-37f7-4f42-8153-3a19b435f10b'
        MAVEN_GOALS = 'clean package'
        TEST_SUITE = 'src/test/resources/testrunners/GePS-HOPES_YEA_functional-test.xml'
    }

    stages {
        stage('Checkout Code') {
            steps {
                cleanWs()
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "${BRANCH}"]],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [
                        [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [
                            [$class: 'SparseCheckoutPath', path: 'GePS - YEA/']
                        ]]
                    ],
                    userRemoteConfigs: [[
                        url: 'https://github.com/CormSquare/GePS.git',
                        credentialsId: "${CREDENTIALS_ID}"
                    ]]
                ])
                dir('GePS - YEA') {
                    echo "Checked out GePS - YEA directory."
                }
            }
        }

        stage('Build YEA Project') {
            steps {
                dir('GePS - YEA') {
                    echo "Building GePS - YEA Project..."
                    bat "mvn ${MAVEN_GOALS}"
                }
                post {
                    success {
                        archiveArtifacts artifacts: 'target/*.jar', onlyIfSuccessful: true
                    }
                    failure {
                        echo "Build failed. Please check the logs."
                    }
                }
            }
        }

        stage('Start Selenium Grid') {
            steps {
                echo "Starting Selenium Grid using Docker Compose..."
                bat 'docker-compose -f docker-compose.yaml up -d'
                sleep 10
            }
        }

        stage('Build') {
            steps {
                bat "mvn ${MAVEN_GOALS}"
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/*.jar', onlyIfSuccessful: true
                }
                failure {
                    echo "Build failed. Please check the logs."
                }
            }
        }

        stage('Regression Automation Test') {
            steps {
                echo "Executing Regression Tests on Latest Build..."
                bat "mvn clean test -Dsurefire.suiteXmlFiles=${TEST_SUITE}"
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
                failure {
                    echo "Tests failed. Please check the test reports."
                }
            }
        }

        stage('Start ChainTest Report') {
            steps {
                echo "Starting ChainTest reporting service..."
                bat 'docker-compose -f docker-compose-h2.yml up -d'
                sleep 10
            }
        }

        stage('Publish Chain Test Report') {
            steps {
                script {
                    if (fileExists('target/chaintest-reports/index.html')) {
                        publishHTML([
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'target/chaintest-reports',
                            reportFiles: 'index.html',
                            reportName: 'Chain Test Report'
                        ])
                    } else {
                        echo "Chain test report not found. Skipping report publishing."
                    }
                }
            }
        }

        stage('Publish Test Execution Report') {
            steps {
                script {
                    if (fileExists('target/surefire-reports/TestExecutionReport.html')) {
                        publishHTML([
                            allowMissing: false,
                            alwaysLinkToLastBuild: true,
                            keepAll: true,
                            reportDir: 'target/surefire-reports',
                            reportFiles: 'TestExecutionReport.html',
                            reportName: 'HTML Extent Report'
                        ])
                    } else {
                        echo "Test execution report not found. Skipping report publishing."
                    }
                }
            }
        }

        stage('Stop Selenium Grid') {
            steps {
                echo "Stopping Selenium Grid..."
                bat 'docker-compose -f docker-compose.yaml down'
            }
        }

        stage('Stop ChainTest Report Service') {
            steps {
                echo "Stopping ChainTest Report Service..."
                bat 'docker-compose -f docker-compose-h2.yml down'
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        failure {
            script {
                emailext(
                    to: 'issac.raja@cormsquare.com',
                    subject: "❌ Build Failed: ${env.JOB_NAME}",
                    body: """Hi Team,<br><br>
                             The Jenkins build for <b>${env.JOB_NAME}</b> has <font color="red">FAILED</font>.<br>
                             Please check the attached test reports for more details.<br><br>
                             <a href="${env.BUILD_URL}">Click here to view Jenkins Job</a>""",
                    attachmentsPattern: 'target/chaintest-reports/index.html, target/surefire-reports/TestExecutionReport.html'
                )
            }
        }
        success {
            script {
                emailext(
                    to: 'issac.raja@cormsquare.com',
                    subject: "✔️ Build Success: ${env.JOB_NAME}",
                    body: """Hi Team,<br><br>
                             The Jenkins build for <b>${env.JOB_NAME}</b> was <font color="green">SUCCESSFUL</font>.<br>
                             Please find the attached test reports for your review.<br><br>
                             <a href="${env.BUILD_URL}">Click here to view Jenkins Job</a>""",
                    attachmentsPattern: 'target/chaintest-reports/index.html, target/surefire-reports/TestExecutionReport.html'
                )
            }
        }
    }
}