pipeline {
    agent any

    tools {
        maven 'Maven'
    }

    options {
        timestamps()
    }

    environment {
        // ───────────────────── Repo / Branch Info ────────────────────────────────
        JOB_NAME           = 'GePS-HOPES_YEA'
        DEVELOPMENT_BRANCH = 'GePS-HOPES'
        TESTING_BRANCH     = 'main'
        CREDENTIALS_ID     = '813c6e55-37f7-4f42-8153-3a19b435f10b'

        // ───────────────────── Build / Test Settings ─────────────────────────────
        MAVEN_GOALS        = 'clean install -DskipTests=true'
        PROJECT_NAME       = 'GePS-HOPES_YEA'
        TEST_SUITE         = "src/test/resources/testrunners/${PROJECT_NAME}_functional-test.xml"
        WORKING_DIR        = 'GePS-Testing/GePS-HOPES_YEA'

        // ──────────────────────────── Reports ────────────────────────────────────
        OUTPUT_REPORT_DIR      = "${WORKING_DIR}/test-output"
        CHAIN_TEST_REPORT_DIR  = "${WORKING_DIR}/test-output"

        // ────────────────────────────── Misc ─────────────────────────────────────
        WAIT_TIME_SEC      = '20'          // configurable sleep
    }

    stages {

        /* ─────────────────────────────── Clean Workspace ─────────────────────────────── */
        stage('Clean Workspace') {
            steps {
                cleanWs()
                echo '✅ Workspace cleaned.'
            }
        }

        /* ───────────────────────────── Parallel Git Checkouts ─────────────────────────── */
        stage('Parallel Checkout Repositories') {
            parallel {
                stage('Checkout Development Repository (GePS)') {
                    steps {
                        timeout(time: 10, unit: 'MINUTES') {
                            retry(2) {
                                echo "🔁 Checking out GePS repo (GePS - YEA)..."
                                checkout([
                                    $class: 'GitSCM',
                                    branches: [[name: "${DEVELOPMENT_BRANCH}"]],
                                    extensions: [
                                        [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'GePS - YEA/']]],
                                        [$class: 'CloneOption', shallow: true, depth: 1, noTags: true, timeout: 10]
                                    ],
                                    userRemoteConfigs: [[
                                        url: 'https://github.com/CormSquare/GePS.git',
                                        credentialsId: "${CREDENTIALS_ID}"
                                    ]]
                                ])
                                echo "✅ Checked out GePS repo directory (GePS - YEA)."
                            }
                        }
                    }
                }

                stage('Checkout Testing Repository (GePS-Testing)') {
                    steps {
                        timeout(time: 10, unit: 'MINUTES') {
                            retry(2) {
                                dir('GePS-Testing') {
                                    echo "🔁 Checking out GePS-Testing repo (GePS-HOPES_YEA)..."
                                    checkout([
                                        $class: 'GitSCM',
                                        branches: [[name: "${TESTING_BRANCH}"]],
                                        extensions: [
                                            [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'GePS-HOPES_YEA/']]],
                                            [$class: 'CloneOption', shallow: true, depth: 1, noTags: true, timeout: 10]
                                        ],
                                        userRemoteConfigs: [[
                                            url: 'https://github.com/CormSquare/GePS-Testing.git',
                                            credentialsId: "${CREDENTIALS_ID}"
                                        ]]
                                    ])
                                }
                                echo "✅ Checked out GePS-Testing repo directory (GePS-HOPES_YEA)."
                            }
                        }
                    }
                }
            }
        }

        /* ────────────────────────────── Maven Build (Skip Tests) ───────────────────────────── */
        stage('Build YEA Project') {
            steps {
                dir("${WORKING_DIR}") {
                    echo "⚙️ Building YEA Project (Skipping Tests Only for Build)..."
                    bat "mvn ${MAVEN_GOALS}"
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: "${WORKING_DIR}/target/*.jar", onlyIfSuccessful: true
                }
                failure {
                    echo "❌ Build failed. Please check the logs."
                }
            }
        }

        /* ────────────────────────────── Start Docker Services ─────────────────────────────── */
        stage('Start Services') {
            parallel {
                stage('Start ChainTest Service') {
                    steps {
                        dir("${WORKING_DIR}") {
                            script {
                                echo "🔎 Verifying Docker daemon..."
                                bat "docker info >nul 2>&1"
                                echo "🚀 Starting ChainTest service..."
                                bat "docker-compose -f docker-compose-h2.yml up -d"
                                echo "⏳ Waiting ${WAIT_TIME_SEC}s for ChainTest..."
                                bat "powershell -Command Start-Sleep -Seconds ${WAIT_TIME_SEC}"
                            }
                        }
                    }
                }

                stage('Start Selenium Grid Service') {
                    steps {
                        dir("${WORKING_DIR}") {
                            script {
                                echo "🚀 Starting Selenium Grid..."
                                bat "docker-compose -f docker-compose.yaml up -d"
                                echo "⏳ Waiting ${WAIT_TIME_SEC}s for Selenium Grid..."
                                bat "powershell -Command Start-Sleep -Seconds ${WAIT_TIME_SEC}"
                            }
                        }
                    }
                }
            }
        }

        /* ────────────────────────────── Run Tests ─────────────────────────────────────────── */
        stage('Regression Automation Test') {
            steps {
                dir("${WORKING_DIR}") {
                    timeout(time: 30, unit: 'MINUTES') {
                        echo "🧪 Running Playwright tests..."
                        bat """
                        set SELENIUM_REMOTE_URL=http://localhost:4444/wd/hub
                        mvn test -DsuiteXmlFile=${TEST_SUITE}
                        """
                    }
                }
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
                failure {
                    echo "❌ Test run failed."
                }
            }
        }

        /* ────────────────────────────── Publish Reports ───────────────────────────────────── */
        stage('Publish Reports') {
            steps {
                script {
                    if (fileExists("${CHAIN_TEST_REPORT_DIR}/index.html")) {
                        publishHTML([
                            keepAll: true,
                            alwaysLinkToLastBuild: true,
                            reportDir   : "${CHAIN_TEST_REPORT_DIR}",
                            reportFiles : 'index.html',
                            reportName  : 'Chain Test Report'
                        ])
                    } else {
                        echo "⚠️ Chain Test report not found."
                    }

                    if (fileExists("${OUTPUT_REPORT_DIR}/emailable-report.html")) {
                        publishHTML([
                            keepAll: true,
                            alwaysLinkToLastBuild: true,
                            reportDir   : "${OUTPUT_REPORT_DIR}",
                            reportFiles : 'emailable-report.html',
                            reportName  : 'HTML Extent Report'
                        ])
                    } else {
                        echo "⚠️ Test execution report not found."
                    }
                }
            }
        }

        /* ────────────────────────────── Stop Services ─────────────────────────────────────── */
        stage('Stop Services') {
            steps {
                dir("${WORKING_DIR}") {
                    script {
                        echo "🛑 Stopping ChainTest & Selenium Grid services..."
                        bat 'docker-compose -f docker-compose-h2.yml down'
                        bat 'docker-compose -f docker-compose.yaml down'
                    }
                }
            }
        }
    }

    /* ────────────────────────────── Notifications ───────────────────────────────────────── */
    post {
        failure {
            emailext(
                mimeType: 'text/html',
                to: 'issac.raja@cormsquare.com',
                subject: "❌ Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """<html>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6;">
                            <h2 style="color: red;">❌ Build Failed: ${env.JOB_NAME}</h2>
                            <p><strong>Build Number:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Status:</strong> <span style="color:red;">FAILED</span></p>
                            <p><strong>Time:</strong> ${new Date()}</p>
                            <p>Please check the reports and Jenkins console output for more details.</p>
                            <p><a href="${env.BUILD_URL}">🔗 View Jenkins Job</a></p>
                            <hr/>
                            <p>📎 <strong>View Reports:</strong></p>
                            <ul>
                                <li><a href="${env.BUILD_URL}Chain_Test_Report/">🔗 Chain Test Report</a></li>
                                <li><a href="${env.BUILD_URL}HTML_Extent_Report/">🔗 TestNG Emailable Report</a></li>
                            </ul>
                            <hr/>
                            <footer style="font-size: 12px; color: #888;">
                                <p>Thanks and Regards,</p>
                                <p><strong>Jenkins CI/CD System</strong></p>
                                <p>This is an automated message. Please do not reply directly to this email.</p>
                                <p>If you need assistance, please contact the <a href="mailto:issac.raja@cormsquare.com">QA Team</a>.</p>
                            </footer>
                        </body>
                        </html>""",
                attachmentsPattern: "${CHAIN_TEST_REPORT_DIR}/index.html, ${OUTPUT_REPORT_DIR}/emailable-report.html"
            )
        }

        success {
            emailext(
                mimeType: 'text/html',
                to: 'issac.raja@cormsquare.com',
                subject: "✔️ Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """<html>
                        <body style="font-family: Arial, sans-serif; line-height: 1.6;">
                            <h2 style="color: green;">✔️ Build Success: ${env.JOB_NAME}</h2>
                            <p><strong>Build Number:</strong> ${env.BUILD_NUMBER}</p>
                            <p><strong>Status:</strong> <span style="color:green;">SUCCESS</span></p>
                            <p><strong>Time:</strong> ${new Date()}</p>
                            <p>All tests have passed successfully. Please check the reports below.</p>
                            <p><a href="${env.BUILD_URL}">🔗 View Jenkins Job</a></p>
                            <hr/>
                            <p>📎 <strong>View Reports:</strong></p>
                            <ul>
                                <li><a href="${env.BUILD_URL}Chain_Test_Report/">🔗 Chain Test Report</a></li>
                                <li><a href="${env.BUILD_URL}HTML_Extent_Report/">🔗 TestNG Emailable Report</a></li>
                            </ul>
                            <hr/>
                            <footer style="font-size: 12px; color: #888;">
                                <p>Thanks and Regards,</p>
                                <p><strong>Jenkins CI/CD System</strong></p>
                                <p>This is an automated message. Please do not reply directly to this email.</p>
                                <p>If you need assistance, please contact the <a href="mailto:issac.raja@cormsquare.com">QA Team</a>.</p>
                            </footer>
                        </body>
                        </html>""",
                attachmentsPattern: "${CHAIN_TEST_REPORT_DIR}/index.html, ${OUTPUT_REPORT_DIR}/emailable-report.html"
            )
        }

        cleanup {
            cleanWs()
        }
    }
}